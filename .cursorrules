# Noislume Project Rules

## Framework Management
- Never suggest installing frameworks via Homebrew or otherwise for end users

## Project Structure
- Follow the established directory structure:
  - Views/ for SwiftUI views
  - ViewModels/ for view models
  - Models/ for data models
  - Utils/ for utility classes

## Development Guidelines
- Use SwiftUI for UI components
- Keep logs under "com.SpencerCurtis.Noislume" namespace

## Documentation
- Keep README.md up to date with any changes
- Include clear setup instructions for both users and developers
- Maintain clear separation between user and developer requirements

## Code Style
- Follow Swift best practices
- Use meaningful names for variables and functions
- Document public interfaces
- Try to make functions have a single responsibility, and err on the side of making more functions for modularity

## Testing
- Verify framework loading on app startup
- Test framework functionality after updates
- Ensure compatibility with target macOS versions

## Security
- Never include API keys or secrets in code
- Use secure storage for sensitive data
- Follow Apple's security guidelines for framework usage

## Performance
- Minimize memory usage

## Error Handling
- Provide meaningful error messages
- Allow for levels of logging and log meaningful messages for debugging, info, etc.