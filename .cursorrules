# Noislume Project Rules

## Framework Management
- Always use embedded frameworks, not system-installed ones
- Never suggest installing frameworks via Homebrew for end users
- Frameworks should be bundled with the app
- Use update_frameworks.sh for development setup
- Frameworks are not committed to git (see .gitignore)

## Project Structure
- Follow the established directory structure:
  - Views/ for SwiftUI views
  - ViewModels/ for view models
  - Models/ for data models
  - Utils/ for utility classes
  - Frameworks/ for generated frameworks

## Development Guidelines
- Use SwiftUI for UI components
- Maintain framework verification on app startup
- Keep logs under "com.SpencerCurtis.Noislume" namespace
- Document any new framework dependencies in README.md
- Update update_frameworks.sh when adding new frameworks

## Documentation
- Keep README.md up to date with any changes
- Document framework versions and update procedures
- Include clear setup instructions for both users and developers
- Maintain clear separation between user and developer requirements

## Code Style
- Follow Swift best practices
- Use meaningful names for variables and functions
- Document public interfaces
- Keep framework-related code in appropriate directories

## Testing
- Verify framework loading on app startup
- Test framework functionality after updates
- Ensure compatibility with target macOS versions

## Security
- Never include API keys or secrets in code
- Use secure storage for sensitive data
- Follow Apple's security guidelines for framework usage

## Performance
- Optimize framework loading
- Minimize memory usage
- Profile framework-related operations

## Error Handling
- Implement proper error handling for framework operations
- Provide meaningful error messages
- Log framework-related errors appropriately 